window.utilPlugin = window.utilPlugin || {};
window.utilPlugin.plupload = {
    initold: function() {
        //如果util.plUpload不存在，则暂无法使用
        if ($('.pluploadpicker').length) {
            $('.pluploadpicker').filter(":not(.pluploadpicker-ed)").each(function() {
                window.util.plUpload({
                    $id: $(this)
                });
                $(this).addClass("pluploadpicker-ed");
            });
        }
        if ($('.pluploadpicker-file').length) {
            $('.pluploadpicker-file').each(function() {
                window.util.plUpload({
                    $id: $(this),
                    url: "/ForwardHandler.ashx?_ForwardUrl=" + window.util.getFileDomain() + "/FileUpload",
                    extensions: "doc,docx,ppt,pptx,xls,txt,xlsx,pdf,png,jpg,jpeg,bmp,rar,zip"
                });
            });
        }
    },
    init: function(optionsCustom) {
        var browse_button = optionsCustom && optionsCustom.browse_button || "";
        var optionsOri = {
            runtimes: 'html5,flash,silverlight,html4',
            browse_button: 'pickfiles',
            //container: document.getElementById('container'), // ... or DOM Element itself
            url: 'http://newstatic.icrp.xjtu.edu.cn/app/public/upload.php',
            flash_swf_url: '../plupload/Moxie.swf'/*tpa=http://newstatic.icrp.xjtu.edu.cn/app/plupload/Moxie.swf*/,
            silverlight_xap_url: 'http://newstatic.icrp.xjtu.edu.cn/app/plupload/Moxie.xap',
            multipart_params: { "ASPSESSID": "b5fm1jfftmjndl55mecj0wv5" },
            filters: {
                max_file_size: '20mb',
                mime_types: [
                    { title: "图片文件", extensions: "jpg,jpeg,gif,png" }
                ]
            },
            init: {
                Init: function(up) {
                    $("input[type=file]").each(function() {
                        var $this = $(this);
                        var accept = $this.attr("accept");
                        if (accept.match(/text\/csv/) && !accept.match(/\.csv/)) {
                            $this.attr("accept", accept + ",.csv");
                        }
                    });
                },
                PostInit: function() {
                    // document.getElementById('filelist').innerHTML = '';
                    // document.getElementById('uploadfiles').onclick = function() {
                    // 	uploader.start();
                    // 	return false;
                    // };
                },
                FilesAdded: function(up, files) {
                    var optionsInit = options.init;
                    var btn_file_button = $("#imguUploadCrop1").find(".btn-file .btn-new-1");
                    util.submitDisabled(btn_file_button);
                    $("#imguUploadCrop1").find('.moxie-shim').children('input').attr('disabled', 'disabled');
                    window.plupload.each(files, function(file) {
                        uploader.set$msgVal('<div id="' + file.id + '">' + file.name + ' (' + window.plupload.formatSize(file.size) + ') <b></b></div>');
                    });
                    optionsInit && optionsInit.FilesAddedCallBack && optionsInit.FilesAddedCallBack(up, files);
                    up.refresh();
                    uploader.start();
                },
                UploadProgress: function(up, file) {
                    var optionsInit = options.init;
                    optionsInit && optionsInit.UploadProgressCallBack && optionsInit.UploadProgressCallBack(up, file);
                    uploader.set$msgVal(file.name + ' 上传进度：(' + window.plupload.formatSize(file.size) + ') ' + file.percent + "%");
                    // alert('上传进度已经达到100%')
                },
                FileUploaded: function(up, file, resp) {
                    var optionsInit = options.init;
                    uploader.set$msgVal("");
                    optionsInit && optionsInit.FileUploadedCallBack && optionsInit.FileUploadedCallBack(up, file, resp);
                    var btn_file_button = $("#imguUploadCrop1").find(".btn-file .btn-new-1");
                    util.submitEnabled(btn_file_button);
                    $("#imguUploadCrop1").find('.moxie-shim').children('input').removeAttr('disabled');
                },
                UploadComplete: function(up, files) {
                    // var optionsInit = options.init;
                    // optionsInit && optionsInit.UploadComplete
                    // &&
                    // optionsInit.UploadComplete(up, files);
                    // alert('图片上传完成！')


                },

                Error: function(up, err) {
                    var optionsInit = options.init;
                    optionsInit && optionsInit.ErrorCallBack && optionsInit.ErrorCallBack(up, err);
                    var msg = "错误: " + err.code + ", 内容: " + err.message + (err.file ? ", 文件: " + err.file.name : "");
                    if (err.code === -600) {
                        var max_file_size = up.getOption().filters.max_file_size.toLocaleUpperCase().replace(/MB/, "M");
                        var title = "文件";
                        var mime_types = up.getOption().filters.mime_types;
                        if (mime_types && mime_types[0]) {
                            title = mime_types[0].title || "文件"
                        }
                        msg = "抱歉，上传失败！请重新上传小于" + max_file_size + "的" + title + "。";
                    }
                    if (err.code === -601) {
                        msg = "文件格式错误，您只能上传 " + options.filters.mime_types[0].extensions.replace(/,/g, "/") + " 格式的文件";
                    }
                    uploader.set$msgVal(msg);
                    var btn_file_button = $("#imguUploadCrop1").find(".btn-file .btn-new-1");
                    util.submitEnabled(btn_file_button);
                    $("#imguUploadCrop1").find('.moxie-shim').children('input').removeAttr('disabled');
                }
            }
        };
        var options = $.extend({}, optionsOri, optionsCustom);
        options.init = $.extend({}, optionsOri.init, optionsCustom.init);
        var uploader = new window.plupload.Uploader(options);
        uploader.getFileName = function() {
            var files = uploader.files;
            var name = files[files.length - 1].name;
            return name.replace(/\..*?$/, "");
        };
        uploader.getFileSuffix = function() {
            var files = uploader.files;
            var name = files[files.length - 1].name;
            return name.match(/\..*?$/)[0];
        };
        uploader.$msg = options.$msg || $(browse_button).next(".help-upload");
        if (!uploader.$msg.length) {
            uploader.$msg = $("<div class=\"help-upload\"></div>").insertAfter(browse_button);
        }
        uploader.set$msgVal = function(str) {
            uploader.$msg.html(str);
        };
        uploader.init();
    }
};
window.utilPlugin.selectImg = {
    init: function(opts) {
        var $imagebox = opts.$imagebox;
        var fileUrlDomain = "http://31img.ufile.ucloud.com.cn/";
        var smallImg = "?iopcmd=thumbnail&type=8&width=133&height=83&scale=2";
        //选择图片的弹框
        var $modal = $("." + $imagebox.data("target-modal"));
        // var $formGroup = $imagebox.closest(".form-group-imgupload");
        //选择图片的加载图片
        var loadCover = function($modal, dataCover) {
            var module = '<div class="item">\
				<div class="thumbnail widget-thumbnail">\
					<img src="' + (window.FileDomain) + '">\
					<div class="caption">\
						<i class="fa fa-circle-o"></i>\
						<span class="txt"></span>\
					</div>\
				</div>\
			</div>';
            var getHtml = function(img, txt) {
                return '<div class="item">\
					<div class="thumbnail widget-thumbnail">\
						<img data-url="' + (window.FileDomain) + img + '" src="' + fileUrlDomain + img + smallImg + '">\
						<div class="caption">\
							<i class="fa fa-circle-o"></i>\
							<span class="txt">' + txt + '</span>\
						</div>\
					</div>\
				</div>';
            };
            var htmls = "";
            for (var i = 0; i < dataCover.length; i++) {
                htmls += '<div class="form-group form-group-cover is-hide"><div class="col-sm-12 list list-cover">';
                var dataCoverItem = dataCover[i];
                for (var j = 0; j < dataCoverItem.length; j++) {
                    var _this = dataCoverItem[j];
                    var img = _this.img;
                    var txt = _this.txt;
                    htmls += getHtml(img, txt);
                };
                htmls += '</div></div>';
            };
            var $form = $modal.find(".modal-body .form-horizontal");
            $(htmls).appendTo($form);
            $form.find("http://newstatic.icrp.xjtu.edu.cn/app/public/.form-group-style .btn").eq(0).addClass("btn-style-4").removeClass("btn-link");
            $form.find(".form-group-cover").eq(0).removeClass("is-hide");
            $form.find("http://newstatic.icrp.xjtu.edu.cn/app/public/.form-group-cover .item").eq(0).addClass("active");
        };
        //选择图片的选中图片
        var getSelect = function($modal) {
            var $form = $modal.find(".modal-body .form-horizontal");
            var $items = $form.find("http://newstatic.icrp.xjtu.edu.cn/app/public/.form-group-cover .item");
            var $active = $items.filter(".active");
            if (!$active) {
                $active = $items.eq(0);
            }
            return $active.attr("src");
        };
        if (opts.dataCover) {
            // 选择图片的弹框 的打开弹框按钮
            $imagebox.on("click", ".btn-img-select", function() {
                if (!$modal.find(".form-group-cover .active").length) {
                    loadCover($modal, opts.dataCover);
                }
                window.util.modal.show($modal);
            });
            // 选择图片的弹框中的确认选中图片按钮
            $modal.on("click", ".modal-footer .btn-o-save", function() {
                var $this = $(this);
                // util.imgcropShow({
                // 	// $this: $formGroup.find(".btn-img-select"),
                // 	$this: $imagebox.find(".btn-img-select"),
                // 	src: $modal.find(".form-group-cover .active").find("img").attr("src")
                // });
                window.utilPlugin.JCrop.imgcropShow({
                    // $this: $formGroup.find(".btn-img-select"),
                    $this: $imagebox.find(".btn-img-select"),
                    src: $modal.find(".form-group-cover .active").find("img").data("url")
                });
            });
            // 选择图片的弹框中的切换类型按钮
            $modal.on("click", "http://newstatic.icrp.xjtu.edu.cn/app/public/.form-group-style .btn", function() {
                var $this = $(this);
                var $btnArr = $this.parent().find(".btn");
                var index = $btnArr.index($this);
                var $listCoverArr = $modal.find(".form-group-cover");
                $btnArr.addClass("btn-link").removeClass("btn-style-4").eq(index).removeClass("btn-link").addClass("btn-style-4");
                $listCoverArr.addClass("is-hide").eq(index).removeClass("is-hide");
            });
            // 选择图片的弹框中的选中当前图片
            $modal.on("click", "http://newstatic.icrp.xjtu.edu.cn/app/public/.list-cover .item", function() {
                var $this = $(this);
                var $modal = $this.closest(".modal");
                $modal.find("http://newstatic.icrp.xjtu.edu.cn/app/public/.list-cover .item").filter(".active").removeClass("active");
                $this.addClass("active");
                return getSelect($modal);
            });
        }
    }
};
window.utilPlugin.JCrop = {
    ajax: function() {},
    imgUploadAndCrop: function(opts) {
        opts.$imagebox = opts.$imagebox;
        opts.plUploadConfig = opts.plUploadConfig;
        opts.imgCropName = opts.imgCropName;
        opts.urlCutting = opts.urlCutting;
        opts.dataCover = opts.dataCover;
        return new function() {
            var urlCutting = opts.urlCutting || window.util.getFileDomain() + "/Cutting";
            //var urlCutting = opts.urlCutting || encodeURIComponent("/ForwardHandler.ashx?_ForwardUrl=" + util.getFileDomain() + "Cutting");
            var plUploadConfig = opts.plUploadConfig;
            var imgCropName = opts.imgCropName;
            var $imagebox = opts.$imagebox;
            window.utilPlugin.selectImg.init(opts);
            var fnBtnSubmit = function(e) {
                var $img = $imagebox.find(".img-croping");
                var data = $img.data();
                var src = $imagebox.find(".imgcrop-box").find(".img-croping").attr("src");
                var strData = {
                    //_ForwardUrl: util.getFileDomain() + "Cutting",
                    h: data.h,
                    w: data.w,
                    x: data.x,
                    y: data.y,
                    x2: data.x2,
                    y2: data.y2,
                    f: src,
                    img_width: data.img_width,
                    img_height: data.img_height
                };
                var urlCuttingNow = urlCutting + "?_ForwardUrl=" + encodeURIComponent(window.util.getFileDomain() + "/Cutting?" + $.param(strData));
                $.ajax({
                    type: "get",
                    url: urlCuttingNow,
                    //data: "h=" + data.h + "&w=" + data.w + "&x=" + data.x + "&y=" + data.y + "&x2=" + data.x2 + "&y2=" + data.y2 + "&f=" + src + "&img_width=" + data.img_width + "&img_height=" + data.img_height,
                    // data: $.param(strData),
                    success: function(data) {
                        if (data != "") {
                            $imagebox.find(".imgcrop-box").removeClass("imgcrop-box-ing").addClass("imgcrop-box-ed");
                            // window.utilPlugin.JCrop.jcrop_api[opts.imgCropName].destroy();
                            $imagebox.find(".img-croping").data("Jcrop") && $imagebox.find(".img-croping").data("Jcrop").destroy();
                            $imagebox.find(".img-croped").attr("src", data).removeClass("is-hide");
                            $imagebox.find(".img-croping").addClass("is-hide").removeAttr("style");
                            //$imagebox.find(".jcrop-holder").addClass("is-hide");
                            //$imagebox.find(".btn-img-croped").addClass("is-hide");
                            $imagebox.find(".imgcrop-box").find("input[type=hidden]").val(data);
                            $imagebox.find(".col-upload").removeClass("is-hide");
                        } else {
                            alert("失败！");
                        }
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert("失败！");
                    }
                });
            };
            // 裁剪确认按钮
            $imagebox.on("click", ".btn-img-croped", fnBtnSubmit);
            // util.plUpload(plUploadConfig);
            window.utilPlugin.plupload.init(plUploadConfig);
            // return event;
        }();
    },
    imgcropShow: function(opts) {
        var $this = opts.$this = opts.$this;
        var src = opts.src = opts.src;
        var type = opts.type = opts.type;
        var imageCropName = opts.imageCropName = opts.imageCropName;
        type = type || 0;
        var $imgcropBox = $this.closest(".form-group-imgupload").find(".imgcrop-box");
        var $imgCroping = $imgcropBox.find(".img-croping");
        var $imgCroped = $imgcropBox.find(".img-croped");
        var hide = function($obj) {
            $obj.addClass("is-hide");
        };
        var show = function($obj) {
            $obj.removeClass("is-hide");
        };
        var changeStatus = function(statusId) {
            if (typeof statusId === "number") {
                if (statusId === 1) {
                    $imgcropBox.addClass("imgcrop-box-ing").removeClass("imgcrop-box-ed");
                    $imgcropBox.next(".col-upload").addClass("is-hide");
                } else {
                    $imgcropBox.removeClass("imgcrop-box-ing").addClass("imgcrop-box-ed");
                    $imgcropBox.next(".col-upload").removeClass("is-hide");
                }
            } else {
                $imgcropBox.toggleClass("imgcrop-box-ing imgcrop-box-ed");
            }
        };
        $imgcropBox.addClass("is-show");
        if (type === 1) {
            changeStatus(1);
            var isSame = $imgCroping.attr("src") == src;
            $imgCroping.attr("src", src);
            show($imgCroping);
            hide($imgCroped);
            // window.utilPlugin.JCrop.jcrop_api && window.utilPlugin.JCrop.jcrop_api[imageCropName] && window.utilPlugin.JCrop.jcrop_api[imageCropName].destroy();
            $imgCroping.data("Jcrop") && $imgCroping.data("Jcrop").destroy();
            if (isSame) {
                // util.imageCrop($imgcropBox.children('.img-croping'), opts.cropWidth || null, opts.cropHeight || null, ((opts.cropRatio || opts.cropRatio === 0) ? opts.cropRatio : null), imageCropName);
                window.utilPlugin.JCrop.imageCrop($imgcropBox.children('.img-croping'), opts.cropWidth || null, opts.cropHeight || null, ((opts.cropRatio || opts.cropRatio === 0) ? opts.cropRatio : null), imageCropName);
            } else {
                var $imgCroping = $imgcropBox.children('.img-croping');
                $imgCroping.off("load");
                // $imgCroping.attr("src",$imgcropBox.children(".img-croped").attr("src"));
                $imgCroping.on("load", opts, function(e) {
                    var opts = e.data;
                    // util.imageCrop($imgcropBox.children('.img-croping'), opts.cropWidth || null, opts.cropHeight || null, ((opts.cropRatio || opts.cropRatio === 0) ? opts.cropRatio : null), imageCropName);
                    window.utilPlugin.JCrop.imageCrop($imgcropBox.children('.img-croping'), opts.cropWidth || null, opts.cropHeight || null, ((opts.cropRatio || opts.cropRatio === 0) ? opts.cropRatio : null), imageCropName);
                    show($imgcropBox.find(".btn-img-croped"));
                });
            }
            // show($imgcropBox.find(".btn-img-croped"));
            show($imgcropBox.find(".jcrop-holder"));
        } else {
            changeStatus(0);
            $imgCroped.attr("src", src);
            show($imgCroped);
            hide($imgCroping);
            $imgcropBox.find(".btn-img-croped").addClass("is-hide");
            $imgcropBox.find(".jcrop-holder").addClass("is-hide");
        }
    },
    imageCrop: function($img, valWidth, valHeight, aspectRatio, imageCropName) {
        var fun = function() {
            var imageCropObj = {
                $preview: null,
                $pcnt: null,
                $pimg: null,
                $img: $img,
                xsize: null,
                ysize: null,
                valWidth: +valWidth || 175,
                valHeight: +valHeight || 260,
                boundx: undefined,
                boundy: undefined,
                aspectRatio: ((+aspectRatio || aspectRatio === 0) ? aspectRatio : (valWidth && valHeight ? valWidth / valHeight : 175 / 260)),
                init: function($img) {
                    var $imgcropBox = $img.closest(".form-group-imgupload").find(".imgcrop-box");
                    $imgcropBox.find(".img-croping-clone").remove();
                    $imgcropBox.find(".img-croping").after($imgcropBox.find(".img-croping").clone().removeClass("img-croping").addClass("img-croping-clone"));
                    this.handleTarget($img);
                    $imgcropBox.find(".img-croping-clone").remove();
                },
                handleTarget: function($img) {
                    var that = this;
                    $img.Jcrop({
                        onChange: that.updatePreview,
                        onSelect: that.updatePreview,
                        aspectRatio: that.aspectRatio || (that.xsize / that.ysize),
                        //minSize: [175, 260],
                        //maxSize: [0, 0],
                        allowSelect: false
                    }, function() {
                        // Use the API to get the real image size
                        var bounds = this.getBounds();
                        that.boundx = bounds[0];
                        that.boundy = bounds[1];
                        // Store the API in the jcrop_api variable
                        that.jcrop_api = this;
                        that.jcrop_api.setSelect([0, 0, that.valWidth, that.valHeight]);
                        that.jcrop_api.setOptions({ bgFade: true });
                        that.jcrop_api.ui.selection.addClass('jcrop-selection');
                        // Move the preview into the jcrop container for css positioning
                        // that.$preview.appendTo(that.jcrop_api.ui.holder);
                        // if (!window.utilPlugin.JCrop.jcrop_api) {
                        // 	window.utilPlugin.JCrop.jcrop_api = {};
                        // }
                        // window.utilPlugin.JCrop.jcrop_api[imageCropName] = this;
                    });
                },
                updatePreview: function(c) {
                    if (parseInt(c.w) > 0) {
                        var rx = imageCropObj.xsize / c.w;
                        var ry = imageCropObj.ysize / c.h;
                        imageCropObj.$img.data({
                            x: c.x,
                            y: c.y,
                            x2: c.x2,
                            y2: c.y2,
                            w: c.w,
                            h: c.h,
                            img_width: imageCropObj.boundx,
                            img_height: imageCropObj.boundy
                        });
                    }
                }
            };
            imageCropObj.init($img);
            return imageCropObj;
        };
        return fun();
    }
};
var pluploadpicker_manage = {
    init: window.utilPlugin.plupload.initold
};
//pluploadpicker_manage.init = window.utilPlugin.plupload.initold;
$(function() {
    //全部的下拉列表
    window.utilPlugin.plupload.initold();
});